#include<16F887.h>
#device ADC = 8//tamaño de bits de resolucion (valores adimencioanles que obtienen un muestreo de una señal digital)
#fuses INTRC_IO, NOWDT, PROTECT, NOLVP, MCLR, NOLVP, NOBROWNOUT
#use delay(INTERNAL=4000000)

// se definen las macros simpre antes de llamar a la biblioteca debido a las directivas del lenguaje
// basicamente es establecer como se conectara la lcd con el micro
#define LCD_DATA_PORT getenv("SFR:PORTD")

#include <lcd.c>


void main(){

   int8 iAdc; //  variable que captura el valor adimencional recibido desde el port analogico
   setup_ccp1(CCP_PWM); // se configura el pin ccp1 como PWD
   setup_timer_2(T2_DIV_BY_16, 255,1);
   set_pwm1_duty(0); // se pone el ciclo de trabajo en 0 para su inicializacion (0%)
   
   
   lcd_init();
   setup_adc_ports(sAN0); // se confitgura el puerto que servira como analogico
   setup_adc(ADC_CLOCK_INTERNAL);
   lcd_putc("\fReady...\n");
   delay_ms(2000);
   // basicamente le da el giro al motor
   output_high(PIN_C0);
   output_low(PIN_C1);
   
   
   while(TRUE){
      
      set_adc_channel(0);
      iAdc = read_adc(); // asocia el valor leido desde el puerto adc a la variable previamente definida   
      printf(lcd_putc,"\f");
      
      delay_ms(500);
   }
